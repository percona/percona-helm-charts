# Default values for psmdb-cluster.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

pause: false
standby: false
disableAutofail: false
keepData: true
keepBackups: true
restoreFrom: false
restoreOpts: false
defaultUser: pguser
defaultDatabase: pgdb
targetPort: "5432"

image:
  repo: percona/percona-postgresql-operator
  pgver: ppg14

sslCA: ""
sslSecretName: ""
sslReplicationSecretName: ""
tlsOnly: false

bucket:
  key:
  secret:
  json:
# Replace default AWS S3 CA with a custom one here
  s3ca:

pgPrimary:
  image: ""
  resources:
    requests:
      memory: "128Mi"
  tolerations: []
  volumeSpec:
    size: 1G
    accessmode: ReadWriteOnce
    storagetype: dynamic
    storageclass: "standard"
  expose:
    serviceType: ClusterIP
    loadBalancerSourceRanges: []
  affinity:
    antiAffinityType: preferred
    nodeAffinityType:
    nodeLabel:
    advanced:

pmm:
  enabled: false
  image:
    repository: percona/pmm-client
    tag: 2.29.0
  serverHost: monitoring-service
  resources:
    requests:
      memory: 200M
      cpu: 500m

backup:
  image: ""
  backrestRepoImage: ""
  resources:
    requests:
      memory: "48Mi"
  volumeSpec:
    size: 1G
    accessmode: ReadWriteOnce
    storagetype: dynamic
    storageclass: "standard"
  schedule:
  antiAffinityType: preferred

pgBouncer:
  image: ""
  size: 3
  resources:
    requests:
      cpu: "1"
      memory: "128Mi"
    limits:
      cpu: "2"
      memory: "512Mi"
  expose:
    serviceType: ClusterIP
    loadBalancerSourceRanges: []
  exposePostgresUser: false
  antiAffinityType: preferred

replicas:
  size: 2
  resources:
    requests:
      cpu: "1"
      memory: "128Mi"
    limits:
      cpu: "1"
      memory: "128Mi"
  volumeSpec:
    accessmode: ReadWriteOnce
    size: 1G
    storagetype: dynamic
    storageclass: "standard"
  enableSyncStandby: false
  expose:
    serviceType: ClusterIP

pgBadger:
  enabled: false
  image: ""
  port: 10000

secrets:
  name:
  # replication user password
  primaryuser:
  # superuser password
  postgres:
  # pgbouncer user password
  pgbouncer:
  # pguser user password
  pguser:

versionService:
  url: "https://check.percona.com"
  apply: "disabled"
  schedule: "0 4 * * *"
