apiVersion: v1
kind: ConfigMap
metadata:
  name: pmm-ha-haproxy-init-script
  namespace: {{ .Release.Namespace }}
data:
  wait-for-pmm.sh: |
    #!/bin/bash
    set -euo pipefail
    
    # Configuration
    readonly NAMESPACE="{{ .Release.Namespace }}"
    readonly RELEASE_NAME="{{ .Release.Name }}"
    readonly REPLICAS="{{ .Values.replicas }}"
    readonly MAX_ATTEMPTS=60
    
    # Colors for output
    readonly RED='\033[0;31m'
    readonly GREEN='\033[0;32m'
    readonly YELLOW='\033[1;33m'
    readonly BLUE='\033[0;34m'
    readonly NC='\033[0m' # No Color
    
    log_info() {
      echo -e "${BLUE}[INFO]${NC} $1"
    }
    
    log_success() {
      echo -e "${GREEN}[SUCCESS]${NC} $1"
    }
    
    log_warning() {
      echo -e "${YELLOW}[WARNING]${NC} $1"
    }
    
    log_error() {
      echo -e "${RED}[ERROR]${NC} $1"
    }
    
    # Install bind-tools if not available (for nslookup)
    install_dependencies() {
      if ! command -v nslookup >/dev/null 2>&1; then
        log_info "Installing bind-tools..."
        apk add --no-cache bind-tools > /dev/null 2>&1 || {
          log_error "Failed to install bind-tools"
          exit 1
        }
      fi
    }
    
    # Check if PMM instance endpoint is available
    check_pmm_endpoint() {
      local pmm_host="$1"
      local instance_id="$2"
      
      echo "Checking PMM instance: $pmm_host:$pmm_port"
      
      local https_code=$(curl -s --max-time "$timeout" -k -o /dev/null -w "%{http_code}" "https://$pmm_host:$pmm_port/")
      if [ "$https_code" = "200" ] || [ "$https_code" = "302" ]; then
        echo "✅ HTTPS connection check passed for $pmm_host:$pmm_port (status: $https_code)"
        return 0
      else
        echo "❌ Connection check failed for $pmm_host:$pmm_port (HTTPS status: $https_code)"
        return 1
      fi
    }
    
    # Main initialization
    main() {
      log_info "HAProxy initialization starting..."
      log_info "Namespace: $NAMESPACE"
      log_info "Release: $RELEASE_NAME"
      log_info "Expected PMM replicas: $REPLICAS"
      log_info "All PMM endpoints must be available before HAProxy starts"
      
      install_dependencies
      
      for i in $(seq 0 $(({{ .Values.replicas }} - 1))); do
        pmm_host="{{ .Release.Name }}-$i.{{ .Values.service.name | default "monitoring-service" }}.{{ .Release.Namespace }}.svc.cluster.local"
        
        if check_pmm_ready "$pmm_host" "8443" 5; then
          ready_count=$((ready_count + 1))
          echo "✅ Instance $i is ready ($ready_count/{{ .Values.replicas }})"
        else
          echo "❌ Instance $i is not ready yet"
          all_ready=false
        fi
        
        # Calculate next wait time with exponential backoff (max 30 seconds)
        local wait_time=$((2 ** (attempt / 3)))
        if [ $wait_time -gt 30 ]; then
          wait_time=30
        fi
        
        log_warning "Not all PMM endpoints are available yet. Waiting ${wait_time}s before retry..."
        sleep $wait_time
        attempt=$((attempt + 1))
      done
      
      log_error "Timeout: PMM endpoints did not become available within expected time"
      log_error "This may indicate an issue with PMM service creation"
      log_error "Available endpoints: $ready_count/$instances_checked"
      exit 1
    }
    
    # Run main function
    main "$@"
