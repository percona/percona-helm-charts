{{- if .Values.secret.create -}}
{{- $existingSecret := (lookup "v1" "Secret" .Release.Namespace .Values.secret.name) }}
{{- $existingData := dict }}
{{- if $existingSecret }}
{{- $existingData = $existingSecret.data }}
{{- end }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.secret.name }}
  labels:
    {{- include "pmm.labels" . | nindent 4 }}
  annotations:
    {{- with .Values.secret.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
type: Opaque
data:
# base64 encoded passwords and credentials
# encode some password: `echo -n "admin" | base64`
# to get PMM admin password: `kubectl get secret pmm-secret -o jsonpath='{.data.PMM_ADMIN_PASSWORD}' | base64 --decode`
# to get ClickHouse username: `kubectl get secret pmm-secret -o jsonpath='{.data.PMM_CLICKHOUSE_USER}' | base64 --decode`
# to get ClickHouse password: `kubectl get secret pmm-secret -o jsonpath='{.data.PMM_CLICKHOUSE_PASSWORD}' | base64 --decode`
  PMM_ADMIN_PASSWORD: {{ get $existingData "PMM_ADMIN_PASSWORD" | default (.Values.secret.pmm_password | default (randAlphaNum 32) | b64enc) | quote }}
  PMM_CLICKHOUSE_USER: {{ get $existingData "PMM_CLICKHOUSE_USER" | default (.Values.secret.clickhouse_user | default "clickhouse_pmm" | b64enc) | quote }}
  PMM_CLICKHOUSE_PASSWORD: {{ get $existingData "PMM_CLICKHOUSE_PASSWORD" | default (.Values.secret.clickhouse_password | default (randAlphaNum 32) | b64enc) | quote }}
  {{- if or (get $existingData "GF_AUTH_GENERIC_OAUTH_CLIENT_ID") (.Values.secret.GF_AUTH_GENERIC_OAUTH_CLIENT_ID) }}
  GF_AUTH_GENERIC_OAUTH_CLIENT_ID: {{ get $existingData "GF_AUTH_GENERIC_OAUTH_CLIENT_ID" | default .Values.secret.GF_AUTH_GENERIC_OAUTH_CLIENT_ID | quote }}
  {{- end }}
  {{- if or (get $existingData "GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET") (.Values.secret.GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET) }}
  GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: {{ get $existingData "GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET" | default .Values.secret.GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET | quote }}
  {{- end }}
{{- end }}
