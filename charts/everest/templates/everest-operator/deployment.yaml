apiVersion: apps/v1
kind: Deployment
metadata:
  name: everest-operator
  namespace: {{ include  "everest.namespace" . }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: everest-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: everest-operator
    spec:
      containers:
      - args:
        {{- if .Values.operator.enableLeaderElection }}
        - --leader-elect
        {{- end }}
        - --metrics-bind-address=:8443
        - --health-probe-bind-address=:8081
        - --monitoring-namespace={{ .Values.monitoring.namespaceOverride }}
        - --system-namespace={{ include  "everest.namespace" . }}
        command:
        - /manager
        image: {{ .Values.operator.image }}:{{ .Chart.Version }}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 1
        name: manager
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {{ toYaml .Values.operator.resources | nindent 10 }}
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: PERCONA_VERSION_SERVICE_URL
          value: {{ printf "%s/%s" (include "everest.versionMetadataURL" .) "versions/v1" }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
      serviceAccount: everest-operator-controller-manager
      serviceAccountName: everest-operator-controller-manager
      terminationGracePeriodSeconds: 10
