compatibility:
  # -- Enable OpenShift compatibility.
  # If set, ignores olm.install and olm.namespace settings.
  openshift: false
# -- Namespace override. Defaults to the value of .Release.Namespace.
namespaceOverride: ""
# -- If set, enabled sending telemetry information.
telemetry: true
server:
  # -- Image to use for the server container.
  image: perconalab/everest
  # -- Resources to allocate for the server container.
  resources:
    limits:
      cpu: 200m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 20Mi
  # -- Key for signing JWT tokens. This needs to be an RSA private key.
  # This is created during installation only.
  # To update the key after installation, you need to manually update the `everest-jwt` Secret or use everestctl.
  jwtKey: ""
  # -- Settings for RBAC.
  # These settings are applied during installation only.
  # To change the settings after installation, you need to manually update the `everest-rbac` ConfigMap.
  rbac:
    # -- If set, enables RBAC for Everest.
    enabled: false
    # -- RBAC policy configuration. Ignored if `rbac.enabled` is false.
    policy: |
      g, admin, role:admin
  # -- OIDC configuration for Everest.
  # These settings are applied during installation only.
  # To change the settings after installation, you need to manually update the `everest-settings` ConfigMap.
  oidc: {}
  # issuerUrl: ""
  # clientId: ""
  # -- Set the allowed number of requests per second.
  apiRequestsRateLimit: 100
  # -- The initial password configured for the admin user.
  # If unset, a random password is generated.
  # It is strongly recommended to reset the admin password after installation.
  initialAdminPassword: ""
operator:
  # -- Image to use for the Everest operator container.
  image: perconalab/everest-operator
  # -- Health probe address for the operator.
  healthProbeAddr: ":8081"
  # -- Metrics address for the operator.
  metricsAddr: "127.0.0.1:8080"
  # -- Enable leader election for the operator.
  enableLeaderElection: true
  # -- Resources to allocate for the operator container.
  resources:
    limits:
      cpu: 500m
      memory: 128Mi
    requests:
      cpu: 5m
      memory: 64Mi
# -- URL of the Version Metadata Service.
versionMetadataURL: "https://check.percona.com"
upgrade:
  # -- If set, run preliminary checks before upgrading.
  # It is strongly recommended to enable this setting.
  preflightChecks: true
olm:
  # -- If set, installs OLM in the provided namespace.
  install: true
  # -- Namespace where OLM is installed. Do no change unless you know what you are doing.
  namespace: everest-olm
  # -- Image to use for Everest CatalogSource.
  catalogSourceImage: perconalab/everest-catalog
  # -- Image to use for the OLM components.
  image: quay.io/operator-framework/olm@sha256:1b6002156f568d722c29138575733591037c24b4bfabc67946f268ce4752c3e6
  packageserver:
    tls:
      # -- Type of TLS certificates. Supported values are "helm" and "cert-manager".
      # For production setup, it is recommended to use "cert-manager".
      type: "helm"
      # -- CA certificate for the PackageServer APIService. Overrides the tls.type setting.
      caCert: ""
      # -- Client certificate for the PackageServer APIService. Overrides the tls.type setting.
      tlsCert: ""
      # -- Client key for the PackageServer APIService. Overrides the tls.type setting.
      tlsKey: ""

dbNamespace:
  # -- If set, deploy the database operators in `everest` namespace.
  # The namespace may be overridden by setting `dbNamespace.namespaceOverride`.
  enabled: true
  # -- If `dbNamespace.enabled` is `true`, deploy the database operators in this namespace.
  namespaceOverride: everest

# Do not change the following values unless you know what you are doing.
# @ignore
kube-state-metrics:
  enabled: true
  namespaceOverride: "everest-monitoring"
  selectorOverride:
    app.kubernetes.io/name: kube-state-metrics
  customLabels:
    everest.percona.com/type: monitoring
  fullnameOverride: kube-state-metrics
  volumes:
  - name: customresourcestate-config
    configMap:
      name: customresource-config-ksm
  volumeMounts:
  - name: customresourcestate-config
    mountPath: /etc/customresourcestate
    readOnly: true
  extraArgs:
  - --custom-resource-state-config-file=/etc/customresourcestate/config
  metricLabelsAllowlist:
  - "pods=[app.kubernetes.io/component,app.kubernetes.io/instance,app.kubernetes.io/managed-by,app.kubernetes.io/name,app.kubernetes.io/part-of]"
  - "persistentvolumeclaims=[app.kubernetes.io/component,app.kubernetes.io/instance,app.kubernetes.io/managed-by,app.kubernetes.io/name,app.kubernetes.io/part-of]"
  - "jobs=[app.kubernetes.io/component,app.kubernetes.io/instance,app.kubernetes.io/managed-by,app.kubernetes.io/name,app.kubernetes.io/part-of]"

# -- If set, creates resources for Kubernetes monitoring.
createMonitoringResources: true

# Do not change the following values unless you know what you are doing.
# @ignore
monitoring:
  enabled: true
  namespaceOverride: everest-monitoring
  fullnameOverride: vm-operator
  crds:
    enabled: false
    plain: true
  admissionWebhooks:
    enabled: false
  certManager:
    enabled: false
