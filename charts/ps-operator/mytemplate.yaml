---
# Source: ps-operator/templates/role-binding.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mytemplate-ps-operator
  namespace: default
---
# Source: ps-operator/templates/configmap.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 08db2feb.percona.com
kind: ConfigMap
metadata:
  name: mytemplate-ps-operator-config
  namespace: default
---
# Source: ps-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: mytemplate-ps-operator-leaderelection
  namespace: default
  labels:
    app.kubernetes.io/name: ps-operator
    helm.sh/chart: ps-operator-0.9.0
    app.kubernetes.io/instance: mytemplate
    app.kubernetes.io/version: "0.9.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: ps-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: mytemplate-ps-operator
  namespace: default
  labels:
    app.kubernetes.io/name: ps-operator
    helm.sh/chart: ps-operator-0.9.0
    app.kubernetes.io/instance: mytemplate
    app.kubernetes.io/version: "0.9.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - pods/exec
  - secrets
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - get
  - list
  - patch
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  - certmanager.k8s.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ps.percona.com
  resources:
  - perconaservermysqlbackups
  - perconaservermysqlbackups/finalizers
  - perconaservermysqlbackups/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ps.percona.com
  resources:
  - perconaservermysqlrestores
  - perconaservermysqlrestores/finalizers
  - perconaservermysqlrestores/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ps.percona.com
  resources:
  - perconaservermysqls
  - perconaservermysqls/finalizers
  - perconaservermysqls/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - create
  - get
  - list
  - patch
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  verbs:
  - create
  - get
  - list
  - patch
  - watch
---
# Source: ps-operator/templates/role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: mytemplate-ps-operator-leaderelection
  namespace: default
  labels:
    app.kubernetes.io/name: ps-operator
    helm.sh/chart: ps-operator-0.9.0
    app.kubernetes.io/instance: mytemplate
    app.kubernetes.io/version: "0.9.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: mytemplate-ps-operator-leaderelection
subjects:
- kind: ServiceAccount
  name: mytemplate-ps-operator
---
# Source: ps-operator/templates/role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: mytemplate-ps-operator
  namespace: default
  labels:
    app.kubernetes.io/name: ps-operator
    helm.sh/chart: ps-operator-0.9.0
    app.kubernetes.io/instance: mytemplate
    app.kubernetes.io/version: "0.9.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: mytemplate-ps-operator
subjects:
- kind: ServiceAccount
  name: mytemplate-ps-operator
---
# Source: ps-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mytemplate-ps-operator
  namespace: default
  labels:
    app.kubernetes.io/name: ps-operator
    helm.sh/chart: ps-operator-0.9.0
    app.kubernetes.io/instance: mytemplate
    app.kubernetes.io/version: "0.9.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ps-operator
      app.kubernetes.io/instance: mytemplate
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ps-operator
        app.kubernetes.io/instance: mytemplate
    spec:
      containers:
      - args:
        - --leader-elect
        command:
        - /usr/local/bin/percona-server-mysql-operator
        env:
        - name: LOG_STRUCTURED
          value: "false"
        - name: LOG_LEVEL
          value: "INFO"
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: DISABLE_TELEMETRY
          value: "false"
        image: "percona/percona-server-mysql-operator:0.9.0"
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          {}
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: mytemplate-ps-operator
      terminationGracePeriodSeconds: 10
