# Default values for ps-cluster.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

finalizers:
  - delete-mysql-pods-in-order

crVersion: 0.3.0
pause: false
allowUnsafeConfigurations: false
# initImage: percona/percona-server-mysql-operator:0.3.0

# If this is set will not create secrets from values and will instead try to use
# a pre-existing secret of the same name.
# secretsName: cluster1-secrets
# sslSecretName: cluster1-ssl
# tls:
#   SANs:
#     - mysql-1.example.com
#     - mysql-2.example.com
#     - mysql-3.example.com
#   issuerConf:
#     name: special-selfsigned-issuer
#     kind: ClusterIssuer
#     group: cert-manager.io

mysql:
  clusterType: async
  image:
    repository: percona/percona-server
    tag: 8.0.29
  imagePullPolicy: Always
  imagePullSecrets: []
  # - name: private-registry-credentials
  # initImage: percona/percona-server-mysql-operator:0.3.0

  size: 3
  sizeSemiSync: 0
  # primaryServiceType: LoadBalancer
  # replicasServiceType: ClusterIP

  # configuration: |
  #   max_connections=250

  resources:
    requests:
      memory: 512M
    limits:
      memory: 1G

  affinity:
    antiAffinityTopologyKey: "kubernetes.io/hostname"
    # advanced:
    #   nodeAffinity:
    #     requiredDuringSchedulingIgnoredDuringExecution:
    #       nodeSelectorTerms:
    #       - matchExpressions:
    #         - key: kubernetes.io/e2e-az-name
    #           operator: In
    #           values:
    #           - e2e-az1
    #           - e2e-az2

  expose:
    enabled: false
    type: ClusterIP

  volumeSpec:
    pvc:
      resources:
        requests:
          storage: 3G

  # runtimeClassName: image-rc
  # priorityClassName: high-priority
  # schedulerName: mycustom-scheduler
  annotations: {}
    # iam.amazonaws.com/role: role-arn
  labels: {}
    # rack: rack-22
  nodeSelector: {}
    # disktype: ssd
  tolerations: []
    # - key: "node.alpha.kubernetes.io/unreachable"
    #   operator: "Exists"
    #   effect: "NoExecute"
    #   tolerationSeconds: 6000
  # A custom Kubernetes Security Context for a Container to be used instead of the default one
  # containerSecurityContext:
  #   privileged: false
  # A custom Kubernetes Security Context for a Pod to be used instead of the default one
  # podSecurityContext:
  #   fsGroup: 1001
  #   supplementalGroups:
  #   - 1001
  # serviceAccountName: percona-server-mysql-operator-workload
  # sidecars:
  # - name: noop-memory
  #   image: busybox
  #   command: ["sleep", "30d"]
  #   volumeMounts:
  #   - name: "memory-vol"
  #     mountPath: "/var/log/app/memory"
  #   resources:
  #     requests:
  #       memory: 16M
  # - name: noop-pvc
  #   image: busybox
  #   command: ["sleep", "30d"]
  #   volumeMounts:
  #   - name: "pvc-vol"
  #     mountPath: "/var/log/app/pvc"
  # sidecarVolumes:
  # - name: "memory-vol"
  #   emptyDir:
  #     medium: "Memory"
  # sidecarPVCs:
  # - name: pvc-vol
  #   spec:
  #     resources:
  #       requests:
  #         storage: 1G

haproxy:
  enabled: true
  image:
    repository: percona/percona-server-mysql-operator
    tag: 0.3.0-haproxy
  imagePullPolicy: Always
  imagePullSecrets: []
  # initImage: percona/percona-server-mysql-operator:0.3.0

  size: 3

  resources:
    requests:
      memory: 1G
      cpu: 600m
    limits: {}

  affinity:
    antiAffinityTopologyKey: "kubernetes.io/hostname"
    # advanced:
    #   nodeAffinity:
    #     requiredDuringSchedulingIgnoredDuringExecution:
    #       nodeSelectorTerms:
    #       - matchExpressions:
    #         - key: kubernetes.io/e2e-az-name
    #           operator: In
    #           values:
    #           - e2e-az1
    #           - e2e-az2

  # runtimeClassName: image-rc
  # priorityClassName: high-priority
  # schedulerName: mycustom-scheduler
  annotations: {}
    # iam.amazonaws.com/role: role-arn
  labels: {}
    # rack: rack-22
  nodeSelector: {}
    # disktype: ssd
  tolerations: []
    # - key: "node.alpha.kubernetes.io/unreachable"
    #   operator: "Exists"
    #   effect: "NoExecute"
    #   tolerationSeconds: 6000
  # A custom Kubernetes Security Context for a Container to be used instead of the default one
  # containerSecurityContext:
  #   privileged: false
  # A custom Kubernetes Security Context for a Pod to be used instead of the default one
  # podSecurityContext:
  #   fsGroup: 1001
  #   supplementalGroups:
  #   - 1001
  # serviceAccountName: percona-server-mysql-operator-workload
  # expose:
  #   type: ClusterIP

router:
  image:
    repository: percona/percona-server-mysql-operator
    tag: 0.3.0-router
  imagePullPolicy: Always
  imagePullSecrets: []
  # initImage: percona/percona-server-mysql-operator:0.3.0

  size: 3

  resources:
    requests:
      memory: 256M
    limits:
      memory: 256M

  affinity:
    antiAffinityTopologyKey: "kubernetes.io/hostname"
    # advanced:
    #   nodeAffinity:
    #     requiredDuringSchedulingIgnoredDuringExecution:
    #       nodeSelectorTerms:
    #       - matchExpressions:
    #         - key: kubernetes.io/e2e-az-name
    #           operator: In
    #           values:
    #           - e2e-az1
    #           - e2e-az2

  # runtimeClassName: image-rc
  # priorityClassName: high-priority
  # schedulerName: mycustom-scheduler
  annotations: {}
    # iam.amazonaws.com/role: role-arn
  labels: {}
    # rack: rack-22
  nodeSelector: {}
    # disktype: ssd
  tolerations: []
    # - key: "node.alpha.kubernetes.io/unreachable"
    #   operator: "Exists"
    #   effect: "NoExecute"
    #   tolerationSeconds: 6000
  # A custom Kubernetes Security Context for a Container to be used instead of the default one
  # containerSecurityContext:
  #   privileged: false
  # A custom Kubernetes Security Context for a Pod to be used instead of the default one
  # podSecurityContext:
  #   fsGroup: 1001
  #   supplementalGroups:
  #   - 1001
  # serviceAccountName: percona-server-mysql-operator-workload
  # expose:
  #   type: ClusterIP

orchestrator:
  image:
    repository: percona/percona-server-mysql-operator
    tag: 0.3.0-orchestrator
  imagePullPolicy: Always
  imagePullSecrets: []
  # - name: private-registry-credentials
  # initImage: percona/percona-server-mysql-operator:0.3.0

  size: 3

  resources:
    requests:
      memory: 128M
    limits:
      memory: 256M

  affinity:
    antiAffinityTopologyKey: "kubernetes.io/hostname"

  volumeSpec:
    pvc:
      resources:
        requests:
          storage: 1G

  # runtimeClassName: image-rc
  # priorityClassName: high-priority
  # schedulerName: mycustom-scheduler
  annotations: {}
    # iam.amazonaws.com/role: role-arn
  labels: {}
    # rack: rack-22
  nodeSelector: {}
    # disktype: ssd
  tolerations: []
    # - key: "node.alpha.kubernetes.io/unreachable"
    #   operator: "Exists"
    #   effect: "NoExecute"
    #   tolerationSeconds: 6000
  # A custom Kubernetes Security Context for a Container to be used instead of the default one
  # containerSecurityContext:
  #   privileged: false
  # A custom Kubernetes Security Context for a Pod to be used instead of the default one
  # podSecurityContext:
  #   fsGroup: 1001
  #   supplementalGroups:
  #   - 1001
  # serviceAccountName: percona-server-mysql-operator-workload
  # expose:
  #   type: ClusterIP

pmm:
  enabled: false
  image:
    repository: percona/pmm-client
    tag: 2.30.0
  imagePullPolicy: Always
  serverHost: monitoring-service
  serverUser: admin
  resources:
    requests:
      memory: 150M
      cpu: 300m
    limits: {}

backup:
  enabled: true
  image:
    repository: percona/percona-xtrabackup
    tag: 8.0.29-22
  imagePullPolicy: Always
  imagePullSecrets: []
  resources:
    requests: {}
    limits: {}
  # containerSecurityContext:
  #   privileged: false
  # serviceAccountName: percona-server-mysql-operator-workload
  storages: {}
    # s3-us-west:
    #   type: s3
    #   verifyTLS: true
    #   nodeSelector:
    #     storage: tape
    #     backupWorker: 'True'
    #   resources:
    #     requests:
    #       memory: 1G
    #       cpu: 600m
    #   affinity:
    #     nodeAffinity:
    #       requiredDuringSchedulingIgnoredDuringExecution:
    #         nodeSelectorTerms:
    #         - matchExpressions:
    #           - key: backupWorker
    #             operator: In
    #             values:
    #             - 'True'
    #   tolerations:
    #     - key: "backupWorker"
    #       operator: "Equal"
    #       value: "True"
    #       effect: "NoSchedule"
    #   annotations:
    #     testName: scheduled-backup
    #   labels:
    #     backupWorker: 'True'
    #   schedulerName: 'default-scheduler'
    #   priorityClassName: 'high-priority'
    #   containerSecurityContext:
    #     privileged: true
    #   podSecurityContext:
    #     fsGroup: 1001
    #     supplementalGroups: [1001, 1002, 1003]
    #   s3:
    #     bucket: S3-BACKUP-BUCKET-NAME-HERE
    #     credentialsSecret: cluster1-s3-credentials
    #     region: us-west-2
    #     prefix: ""

toolkit:
  image:
    repository: percona/percona-server-mysql-operator
    tag: 0.3.0-toolkit
  imagePullPolicy: Always
  resources:
    requests: {}
    limits: {}

secrets:
  passwords:
    root: insecure_root_password
    xtrabackup: insecure_backup_password
    monitor: insecure_monitor_password
    pmmserverkey: my_pmm_server_key
    operator: insecure_operator_password
    replication: insecure_replication_password
    orchestrator: insecure_orchestrator_password
    heartbeat: heartbeat_password
