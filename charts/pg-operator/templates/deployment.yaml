apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "postgres-operator.fullname" . }}
  labels:
{{ include "postgres-operator.labels" . | indent 4 }}
    pgv2.percona.com/control-plane: postgres-operator
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      pgv2.percona.com/control-plane: postgres-operator
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: {{ include "postgres-operator.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/part-of: {{ include "postgres-operator.name" . }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/name: {{ include "postgres-operator.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/part-of: {{ include "postgres-operator.name" . }}
        pgv2.percona.com/control-plane: postgres-operator
    spec:
      serviceAccountName: {{ include "postgres-operator.fullname" . }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      terminationGracePeriodSeconds: 600
      containers:
        - name: percona-postgresql-operator
          image: {{ include "postgres-operator.image" . }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
          - containerPort: 8080
            name: metrics
            protocol: TCP
          env:
            - name: PGO_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- if and (not .Values.watchNamespace) (not .Values.watchAllNamespaces) }}
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- else if .Values.watchNamespace }}
            - name: WATCH_NAMESPACE
              value: {{ .Values.watchNamespace }}
            {{- else if .Values.watchAllNamespaces }}
            - name: WATCH_NAMESPACE
              value: ""
            {{- end }}
            - name: LOG_STRUCTURED
              value: "{{ .Values.logStructured }}"
            - name: LOG_LEVEL
              value: "{{ .Values.logLevel }}"
            - name: DISABLE_TELEMETRY
              value: "{{ .Values.disableTelemetry }}"
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: metrics
              scheme: HTTP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
