{{- if .Values.tls.enabled }}

{{- if not .Values.pxc.certManager }}

{{- $nameDB := printf "%s" (include "pxc-database.fullname" .) }}
{{ $ca := genCA (printf "%s-ca" $nameDB ) 1095 }}
{{ $caCert := $ca.Cert | toString | b64enc }}

{{- $certName := printf "%s-proxysql" $nameDB }}
{{- $altNames := list ( printf "%s-pxc" $nameDB ) ( printf "*.%s-pxc" $nameDB ) ( printf "*.%s-proxysql" $nameDB ) -}}
{{ $cert := genSignedCert $certName nil $altNames 365 $ca }}
{{ $tlsCert := $cert.Cert | toString | b64enc }}
{{ $tlsKey := $cert.Key | toString | b64enc }}

{{- $internalCertName := printf "%s-pxc" $nameDB }}
{{- $internalAltNames := list ( printf "%s" $internalCertName ) ( printf "*.%s" $internalCertName ) ( printf "%s-haproxy-replicas.%s.svc.cluster.local" $nameDB .Release.Namespace ) ( printf "%s-haproxy-replicas.%s" $nameDB .Release.Namespace ) ( printf "%s-haproxy-replicas" $nameDB ) ( printf "%s-haproxy.%s.svc.cluster.local" $nameDB .Release.Namespace ) ( printf "%s-haproxy.%s" $nameDB .Release.Namespace ) ( printf "%s-haproxy" $nameDB ) -}}
{{ $internalTLS := genSignedCert $internalCertName nil $internalAltNames 365 $ca }}
{{ $internalTLSCert := $internalTLS.Cert | toString | b64enc }}
{{ $internalTLSKey := $internalTLS.Key | toString | b64enc }}

{{- $existingCert := (lookup "v1" "Secret" .Release.Namespace (printf "%s-ssl" $nameDB)) }}
{{- if $existingCert }}
{{- $caCert = index $existingCert.data "ca.crt" }}
{{- $tlsCert = index $existingCert.data "tls.crt" }}
{{- $tlsKey = index $existingCert.data "tls.key" }}
{{- end -}}

{{- $existingInternalCert := (lookup "v1" "Secret" .Release.Namespace (printf "%s-ssl-internal" $nameDB)) }}
{{- if $existingInternalCert }}
{{- $caCert = index $existingInternalCert.data "ca.crt" }}
{{- $internalTLSCert = index $existingInternalCert.data "tls.crt" }}
{{- $internalTLSKey = index $existingInternalCert.data "tls.key" }}
{{- end -}}

{{- if not (hasKey .Values.secrets.tls "cluster") }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $nameDB }}-ssl
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/resource-policy: keep
  labels:
{{ include "pxc-database.labels" . | indent 4 }}
type: kubernetes.io/tls
data:
  ca.crt: {{ $caCert }}
  tls.crt: {{ $tlsCert }}
  tls.key: {{ $tlsKey }}
{{- end -}}

{{- if not (hasKey .Values.secrets.tls "internal") }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $nameDB }}-ssl-internal
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/resource-policy: keep
  labels:
{{ include "pxc-database.labels" . | indent 4 }}
type: kubernetes.io/tls
data:
  ca.crt: {{ $caCert }}
  tls.crt: {{ $internalTLSCert }}
  tls.key: {{ $internalTLSKey }}
{{- end -}}

{{- /* cert-manager enabled */}}
{{- end -}}

{{- /* tls disabled */}}
{{- end -}}
